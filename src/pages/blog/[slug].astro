---
// src/pages/blog/[slug].astro
export const prerender = true;

import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';
import { blogData } from '../../data/blogData.js';
import ArticleCard from '../../components/ArticleCard.astro';
import AuthorBio from '../../components/AuthorBio.astro';
import SocialShare from '../../components/SocialShare.astro';

const blogImages = import.meta.glob('/src/assets/images/blogs/*.{jpeg,jpg,png,webp,svg}');

export async function getStaticPaths() {
  return blogData.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;

const imagePath = `/src/assets/${post.image}`;
if (!blogImages[imagePath]) {
    throw new Error(`No se pudo encontrar la imagen del blog: ${imagePath}. Verifica la ruta en blogData.js.`);
}

const formattedDate = new Date(post.publishedDate).toLocaleDateString('es-CL', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    timeZone: 'UTC',
});

const relatedPosts = blogData.filter(related => 
    related.slug !== post.slug &&
    related.tags.some(tag => post.tags.includes(tag))
).slice(0, 3);
---

<Layout 
    title={`${post.title} | Comprende.me`}  
    description={post.excerpt}
    image={(await blogImages[imagePath]()).default.src}
>
    
    <Fragment slot="head-extra">
        <link rel="stylesheet" href="/styles/article.css" />
    </Fragment>

    <main>
        <section class="section article-main-section">
            <div class="container container-narrow">
                <article>
                  <h1>{post.title}</h1>
                  <div class="article-meta-info">
                        <time datetime={post.publishedDate}><i class="ph ph-calendar-heart"></i> {formattedDate}</time>
                        <span aria-hidden="true">•</span>
                        <span><i class="ph ph-clock"></i> {post.duration}</span>
                        {post.tags.map(tag => (
                            <span class="tag">{tag}</span>
                        ))}
                  </div>

                    <Image src={blogImages[imagePath]()} alt={post.alt} class="article-main-image" />
                    
                    <div class="article-body" set:html={post.fullContentHTML} />

                    <SocialShare url={Astro.url} title={post.title} />
                    <AuthorBio />
                    
                    <a href="/blog" class="back-to-blog-link">
                        <i class="ph ph-arrow-arc-left"></i> Volver a todos los artículos
                    </a>
                </article>

                {relatedPosts.length > 0 && (
                    <section class="related-articles">
                        <h2>Artículos Relacionados</h2>
                        <div class="grid grid-3-cols">
                            {relatedPosts.map(relatedPost => (
                                <ArticleCard post={relatedPost} />
                            ))}
                        </div>
                    </section>
                )}
            </div>
        </section>
    </main>
</Layout>